% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/df_to_cypher_relationship.R
\name{df_to_cypher_relationship}
\alias{df_to_cypher_relationship}
\title{Convert a data frame into Cypher relationship statements}
\usage{
df_to_cypher_relationship(
  df,
  rel_type = "RELATES_TO",
  from_col,
  to_col,
  direction = "out",
  use_merge = FALSE,
  on_create = NULL,
  on_match = NULL,
  rel_type_column = NULL,
  naming_style = "as_is"
)
}
\arguments{
\item{df}{A data frame containing relationship data.}

\item{rel_type}{A string for static relationship type (ignored if `rel_type_column` is used).}

\item{from_col}{The column name containing the source node IDs.}

\item{to_col}{The column name containing the target node IDs.}

\item{direction}{Either "out" (default), "in", or "undirected".}

\item{use_merge}{Logical. If TRUE, uses MERGE instead of CREATE.}

\item{on_create}{Named list of properties to set on CREATE.}

\item{on_match}{Named list of properties to set on MATCH.}

\item{rel_type_column}{Optional column name containing dynamic relationship types.}

\item{naming_style}{Naming convention to apply to values in `rel_type_column`. One of:
\itemize{
  \item{\code{"as_is"} (default): no change}
  \item{\code{"snake"}: snake_case}
  \item{\code{"camel"}: camelCase}
  \item{\code{"pascal"}: PascalCase}
  \item{\code{"upper"}: UPPER_CASE}
  \item{\code{"lower"}: lowercase}
}}
}
\value{
A character vector of Cypher statements.
}
\description{
Convert a data frame into Cypher relationship statements
}
